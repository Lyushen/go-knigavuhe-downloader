name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          raw_version="${GITHUB_REF#refs/tags/}"
          clean_version="${raw_version#v}"
          echo "version=$clean_version" >> $GITHUB_OUTPUT
        else
          echo "version=dev-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        fi

    - name: Build binaries
      run: |
        mkdir -p dist
        targets=(
          "linux/amd64"
          "linux/arm64"
          "windows/amd64"
          "windows/arm64"
        )
        
        for target in "${targets[@]}"; do
          GOOS=${target%/*}
          GOARCH=${target#*/}
          output_name="go-knigavuhe-${{ steps.version.outputs.version }}-${GOOS}-${GOARCH}"
          
          if [ "$GOOS" = "windows" ]; then
            output_name+=".exe"
          fi
          
          GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-s -w" -o "dist/$output_name" ./cmd/go-knigavuhe
          
          if [ "$GOOS" = "windows" ]; then
            (cd dist && zip "${output_name%.exe}.zip" "$output_name")
            rm "dist/$output_name"
          else
            (cd dist && tar -czf "$output_name.tar.gz" "$output_name")
            rm "dist/$output_name"
          fi
        done

    - name: Create source archive
      run: |
        git archive --format=tar.gz --prefix=go-knigavuhe-${{ steps.version.outputs.version }}/ HEAD > dist/go-knigavuhe-${{ steps.version.outputs.version }}-src.tar.gz
        git archive --format=zip --prefix=go-knigavuhe-${{ steps.version.outputs.version }}/ HEAD > dist/go-knigavuhe-${{ steps.version.outputs.version }}-src.zip

    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt

    # FIXED: Use correct path pattern for release assets
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*.*  # CHANGED: Use explicit pattern
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # FIXED: Correct artifact upload for manual runs
    - name: Upload artifacts (for manual runs)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ steps.version.outputs.version }}
        path: dist/